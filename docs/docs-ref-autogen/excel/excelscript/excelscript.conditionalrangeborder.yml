### YamlMime:TSType
name: ExcelScript.ConditionalRangeBorder
uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
package: ExcelScript!
fullName: ExcelScript.ConditionalRangeBorder
summary: Represents the border of an object.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: getColor()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder#getColor:member(1)'
    package: ExcelScript!
    fullName: getColor()
    summary: >-
      HTML color code representing the color of the border line, in the form \#RRGGBB (e.g., "FFA500") or as a named
      HTML color (e.g., "orange").
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getColor(): string;'
      return:
        type: string
        description: ''
  - name: getSideIndex()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder#getSideIndex:member(1)'
    package: ExcelScript!
    fullName: getSideIndex()
    summary: >-
      Constant value that indicates the specific side of the border. See `ExcelScript.ConditionalRangeBorderIndex` for
      details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSideIndex(): ConditionalRangeBorderIndex;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorderIndex:enum" />'
        description: ''
  - name: getStyle()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder#getStyle:member(1)'
    package: ExcelScript!
    fullName: getStyle()
    summary: >-
      One of the constants of line style specifying the line style for the border. See `ExcelScript.BorderLineStyle` for
      details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getStyle(): ConditionalRangeBorderLineStyle;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorderLineStyle:enum" />'
        description: ''
  - name: setColor(color)
    uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder#setColor:member(1)'
    package: ExcelScript!
    fullName: setColor(color)
    summary: >-
      HTML color code representing the color of the border line, in the form \#RRGGBB (e.g., "FFA500") or as a named
      HTML color (e.g., "orange").
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setColor(color: string): void;'
      parameters:
        - id: color
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setStyle(style)
    uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder#setStyle:member(1)'
    package: ExcelScript!
    fullName: setStyle(style)
    summary: >-
      One of the constants of line style specifying the line style for the border. See `ExcelScript.BorderLineStyle` for
      details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setStyle(style: ConditionalRangeBorderLineStyle): void;'
      parameters:
        - id: style
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorderLineStyle:enum" />'
      return:
        type: void
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script creates text conditional formatting on the used range of the current worksheet.
           * It puts a dashed red border around cells containing "TK".
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the selected range.
            const sheet = workbook.getActiveWorksheet();
            const range = sheet.getUsedRange();

            // Create new conditional formatting on the range.
            const format = range.addConditionalFormat(ExcelScript.ConditionalFormatType.containsText);
            const textFormat = format.getTextComparison();

            // Set a formatting rule for text that contains "TK"
            const textRule: ExcelScript.ConditionalTextComparisonRule = {
              operator: ExcelScript.ConditionalTextOperator.contains,
              text: "TK"
            };
            textFormat.setRule(textRule);

            // Set the format to add dashed red borders to the cell.
            const formatting = textFormat.getFormat();
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeBottom).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeBottom).setStyle(
                  ExcelScript.ConditionalRangeBorderLineStyle.dash);
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeLeft).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeLeft).setStyle(
                ExcelScript.ConditionalRangeBorderLineStyle.dash);
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeTop).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeTop).setStyle(
                ExcelScript.ConditionalRangeBorderLineStyle.dash);
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeRight).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeRight).setStyle(
                ExcelScript.ConditionalRangeBorderLineStyle.dash);
          }
          ```
