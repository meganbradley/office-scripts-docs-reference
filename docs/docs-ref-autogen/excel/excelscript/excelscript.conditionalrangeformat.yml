### YamlMime:TSType
name: ExcelScript.ConditionalRangeFormat
uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat:interface'
package: ExcelScript!
fullName: ExcelScript.ConditionalRangeFormat
summary: 'A format object encapsulating the conditional formats range''s font, fill, borders, and other properties.'
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: getBorders()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getBorders:member(1)'
    package: ExcelScript!
    fullName: getBorders()
    summary: Collection of border objects that apply to the overall conditional format range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBorders(): ConditionalRangeBorder[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorder:interface" />[]'
        description: ''
  - name: getConditionalRangeBorder(index)
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorder:member(1)'
    package: ExcelScript!
    fullName: getConditionalRangeBorder(index)
    summary: Gets a border object using its name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        getConditionalRangeBorder(
                    index: ConditionalRangeBorderIndex
                ): ConditionalRangeBorder;
      parameters:
        - id: index
          description: Index value of the border object to be retrieved. See `ExcelScript.ConditionalRangeBorderIndex` for details.
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorderIndex:enum" />'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorder:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
          * This script creates text conditional formatting on the used range of the current worksheet.
          * It puts a red border around cells containing "TK".
          */
          function main(workbook: ExcelScript.Workbook) {
            // Get the selected range.
            const sheet = workbook.getActiveWorksheet();
            const range = sheet.getUsedRange();

            // Create new conditional formatting on the range.
            const format = range.addConditionalFormat(ExcelScript.ConditionalFormatType.containsText);
            const textFormat = format.getTextComparison();

            // Set a formatting rule for text that contains "TK"
            const textRule: ExcelScript.ConditionalTextComparisonRule = {
              operator: ExcelScript.ConditionalTextOperator.contains,
              text: "TK"
            };
            textFormat.setRule(textRule);

            // Set the format to add red borders to the cell.
            const formatting = textFormat.getFormat();
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeBottom).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeLeft).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeTop).setColor("red");
            formatting.getConditionalRangeBorder(
              ExcelScript.ConditionalRangeBorderIndex.edgeRight).setColor("red");
          }
          ```
  - name: getConditionalRangeBorderBottom()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderBottom:member(1)'
    package: ExcelScript!
    fullName: getConditionalRangeBorderBottom()
    summary: Gets the bottom border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getConditionalRangeBorderBottom(): ConditionalRangeBorder;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorder:interface" />'
        description: ''
  - name: getConditionalRangeBorderLeft()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderLeft:member(1)'
    package: ExcelScript!
    fullName: getConditionalRangeBorderLeft()
    summary: Gets the left border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getConditionalRangeBorderLeft(): ConditionalRangeBorder;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorder:interface" />'
        description: ''
  - name: getConditionalRangeBorderRight()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderRight:member(1)'
    package: ExcelScript!
    fullName: getConditionalRangeBorderRight()
    summary: Gets the right border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getConditionalRangeBorderRight(): ConditionalRangeBorder;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorder:interface" />'
        description: ''
  - name: getConditionalRangeBorderTop()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderTop:member(1)'
    package: ExcelScript!
    fullName: getConditionalRangeBorderTop()
    summary: Gets the top border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getConditionalRangeBorderTop(): ConditionalRangeBorder;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeBorder:interface" />'
        description: ''
  - name: getFill()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getFill:member(1)'
    package: ExcelScript!
    fullName: getFill()
    summary: Returns the fill object defined on the overall conditional format range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFill(): ConditionalRangeFill;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeFill:interface" />'
        description: ''
  - name: getFont()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getFont:member(1)'
    package: ExcelScript!
    fullName: getFont()
    summary: Returns the font object defined on the overall conditional format range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFont(): ConditionalRangeFont;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalRangeFont:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script creates text conditional formatting on the used range of the current worksheet.
           * It underlines the text in cells containing "TK".
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the selected range.
            const sheet = workbook.getActiveWorksheet();
            const range = sheet.getUsedRange();

            // Create new conditional formatting on the range.
            const format = range.addConditionalFormat(ExcelScript.ConditionalFormatType.containsText);
            const textFormat = format.getTextComparison();

            // Set a formatting rule for text that contains "TK"
            const textRule: ExcelScript.ConditionalTextComparisonRule = {
              operator: ExcelScript.ConditionalTextOperator.contains,
              text: "TK"
            };
            textFormat.setRule(textRule);

            // Set the font format to underline the text.
            const font: ExcelScript.ConditionalRangeFont = textFormat.getFormat().getFont();
            font.setUnderline(ExcelScript.ConditionalRangeFontUnderlineStyle.single);
          }
          ```
  - name: getNumberFormat()
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getNumberFormat:member(1)'
    package: ExcelScript!
    fullName: getNumberFormat()
    summary: Represents Excel's number format code for the given range. Cleared if `null` is passed in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNumberFormat(): string;'
      return:
        type: string
        description: ''
  - name: setNumberFormat(numberFormat)
    uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#setNumberFormat:member(1)'
    package: ExcelScript!
    fullName: setNumberFormat(numberFormat)
    summary: Represents Excel's number format code for the given range. Cleared if `null` is passed in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setNumberFormat(numberFormat: string): void;'
      parameters:
        - id: numberFormat
          description: ''
          type: string
      return:
        type: void
        description: ''
